2.2.0 :001 > c = Ticket.first
  Ticket Load (0.5ms)  SELECT  "tickets".* FROM "tickets"  ORDER BY "tickets"."id" ASC LIMIT 1
 => #<Ticket id: 1, name: nil, state: nil, info: nil, type: nil, created_at: "2016-01-27 10:58:16", updated_at: "2016-01-27 10:58:16", workflow_state: "created">
2.2.0 :002 > c.book!
   (0.2ms)  begin transaction
  SQL (0.5ms)  UPDATE "tickets" SET "info" = ?, "updated_at" = ? WHERE "tickets"."id" = ?  [["info", "booked"], ["updated_at", "2016-01-27 10:58:55.852140"], ["id", 1]]
   (0.9ms)  commit transaction
"booked"
  SQL (1.1ms)  UPDATE "tickets" SET "workflow_state" = 'booked' WHERE "tickets"."id" = ?  [["id", 1]]
 => "booked"
2.2.0 :003 > d = Ticket::Test.new
 => #<Ticket::Test id: nil, name: nil, state: nil, info: nil, type: "Ticket::Test", created_at: nil, updated_at: nil, workflow_state: nil>
2.2.0 :004 > d.save
   (0.1ms)  begin transaction
  SQL (0.9ms)  INSERT INTO "tickets" ("type", "workflow_state", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["type", "Ticket::Test"], ["workflow_state", "created"], ["created_at", "2016-01-27 10:59:04.461117"], ["updated_at", "2016-01-27 10:59:04.461117"]]
   (0.9ms)  commit transaction
 => true
2.2.0 :005 > d.book!
  SQL (9.4ms)  UPDATE "tickets" SET "workflow_state" = 'booked' WHERE "tickets"."type" IN ('Ticket::Test') AND "tickets"."id" = ?  [["id", 2]]
 => true
2.2.0 :006 > e = Ticket::TestBook.new
 => #<Ticket::TestBook id: nil, name: nil, state: nil, info: nil, type: "Ticket::TestBook", created_at: nil, updated_at: nil, workflow_state: nil>
2.2.0 :007 > e.save
   (0.1ms)  begin transaction
  SQL (0.5ms)  INSERT INTO "tickets" ("type", "workflow_state", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["type", "Ticket::TestBook"], ["workflow_state", "created"], ["created_at", "2016-01-27 10:59:25.185747"], ["updated_at", "2016-01-27 10:59:25.185747"]]
   (0.9ms)  commit transaction
 => true
2.2.0 :008 > e.book!
   (0.1ms)  begin transaction
  SQL (0.4ms)  UPDATE "tickets" SET "info" = ?, "updated_at" = ? WHERE "tickets"."id" = ?  [["info", "booked from subclass"], ["updated_at", "2016-01-27 10:59:26.739126"], ["id", 3]]
   (8.1ms)  commit transaction
"booked from subclass"
  SQL (1.0ms)  UPDATE "tickets" SET "workflow_state" = 'booked' WHERE "tickets"."type" IN ('Ticket::TestBook') AND "tickets"."id" = ?  [["id", 3]]
 => "booked from subclass"
2.2.0 :009 >

